@using BlogManager.Web.Areas.Catalog.Models
@model BlogManager.Web.Areas.Catalog.Models.ProductPage


@{
    ViewData["Title"] = localizer["Products"];
    ViewData["Caption"] = localizer["Manage Products here"];
}

<div class="card">
    <div class="col-sm-12" style="padding:20px">
        @if ((AuthorizationService.AuthorizeAsync(User, Permissions.Products.Create)).Result.Succeeded)
        {
            <a onclick="jQueryModalGet('/catalog/product/OnGetCreateOrEdit','Create Product')" class="btn bg-success">
                <i class="fa fa-plus-square"></i> Create
            </a>
        }

        <a id="reload" class="btn btn-primary text-white">
            <i class="fa fas fa-bolt"></i>
            Reload
        </a>
    </div>
    <div class="card-body table-responsive">
        <table id="productTable" class="table table-striped" width="100%" cellspacing="0">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Name</th>
                    <th>Barcode</th>
                    <th>Description</th>
                    <th>Rate</th>
                    @if ((AuthorizationService.AuthorizeAsync(User, Permissions.Products.Delete)).Result.Succeeded
                       || (AuthorizationService.AuthorizeAsync(User, Permissions.Products.Edit)).Result.Succeeded)
                    {
                        <th>Actions</th>
                    }
                </tr>
            </thead>
            <tbody>

                @foreach (var product in Model.ProductItem)
                {
                <tr>
                    <td>
                        @product.Id
                    </td>
                    <td>
                        @product.Name
                    </td>
                    <td>
                        @product.Barcode
                    </td>
                    <td>
                        @product.Description
                    </td>
                    <td>
                        @product.Rate
                    </td>
                    @if ((AuthorizationService.AuthorizeAsync(User, Permissions.Products.Delete)).Result.Succeeded
                    || (AuthorizationService.AuthorizeAsync(User, Permissions.Products.Edit)).Result.Succeeded)
                    {
                        <td text-right">
                            <div class="btn-group">
                                <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    Action
                                </button>
                                <div class="dropdown-menu shadow animated--grow-in">
                                    @if ((AuthorizationService.AuthorizeAsync(User, Permissions.Products.Edit)).Result.Succeeded)
                                    {
                                        <a onclick="jQueryModalGet('/catalog/product/OnGetCreateOrEdit?id=@product.Id','Edit Product')" class="dropdown-item"><i class="fas fa-pencil-alt"></i>  Edit</a>

                                    }
                                    @if ((AuthorizationService.AuthorizeAsync(User, Permissions.Products.Delete)).Result.Succeeded)

                                    {
                                        <form id="form_delete_@product.Id" asp-area="Catalog" asp-controller="Product" method="post" asp-action="OnPostDelete" asp-route-id="@product.Id" onsubmit="return jQueryModalDelete(this)">
                                            <a href="javascript:$('#form_delete_@product.Id').submit();" class="dropdown-item"><i class="fas fa-trash-alt"></i>  Delete</a>
                                        </form>
                                    }
                                </div>
                            </div>
                        </td>
                    }
                </tr>
                }
            </tbody>
        </table>

            <cs-pager     
                  cs-paging-pagesize="@Model.PageSize"
                  cs-paging-pagenumber="@Model.Page"
                  cs-paging-totalitems="@Model.TotalItem"
                  asp-basehref="~/catalog/product"
                  cs-pagenumber-param="page"
                  cs-pager-li-current-class="page-item active"
                  cs-pager-li-other-class="page-item"
                  cs-pager-li-non-active-class="page-item disabled"
                  cs-pager-link-current-class="page-link"
                  cs-pager-link-other-class="page-link">
              </cs-pager>


    </div>
</div>
@section Scripts
{
    <script src="~/js/site.js"></script>
    <script>
        $(document).ready(function () {
            $("#productTable").DataTable();
            loadData();
            $('#reload').on('click', function () {
                loadData();
            });
        });
        //function loadData() {
        //    $('#viewAll').load('/catalog/product/LoadAll');
        //}
    </script>
}